import org.scalatest.FunSuite

class ProblemSolverTest extends FunSuite {

  test(
    """1 - If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
      |Find the sum of all the multiples of 3 or 5 below 1000.""".stripMargin
  ) {

    assert(ProblemSolver.problem1(10) === 23)
  }

  test(
    """2 - Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
      |1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
      |By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.""".stripMargin
  ) {

    assert(ProblemSolver.problem2(100) === 188)
  }

  test(
    """5 - 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
      |What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?""".stripMargin
  ) {

    assert(ProblemSolver.problem5(10) === 2520)
    assert(ProblemSolver.problem5(20) === 232792560)
  }
}
